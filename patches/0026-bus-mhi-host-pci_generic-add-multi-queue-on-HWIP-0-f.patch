From 08c705a6de55825be05716c92cabb27b1b49837c Mon Sep 17 00:00:00 2001
From: Daniele Palmas <dnlplm@gmail.com>
Date: Fri, 28 Jun 2024 11:09:57 +0200
Subject: [PATCH 26/26] bus: mhi: host: pci_generic: add multi queue on HWIP-0
 for Telit FN990

This ports out-of-tree patch:

From: Vivek Pernamitta <quic_vpernami@quicinc.com>
Date: Fri, 3 May 2024 15:23:43 +0530
mhi: pci: Add SDX65 configuration for multi queue support on HWIP-0

for using multi queue with Telit FN990.

Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
---
 drivers/bus/mhi/host/pci_generic.c | 62 ++++++++++++++++++++++++++++--
 1 file changed, 58 insertions(+), 4 deletions(-)

diff --git a/drivers/bus/mhi/host/pci_generic.c b/drivers/bus/mhi/host/pci_generic.c
index cf42ebaa32c0..ada478a4a462 100644
--- a/drivers/bus/mhi/host/pci_generic.c
+++ b/drivers/bus/mhi/host/pci_generic.c
@@ -77,6 +77,42 @@ struct mhi_pci_dev_info {
 		.doorbell_mode_switch = false,		\
 	}
 
+#define MHI_CHANNEL_CONFIG_HW_QUE_UL(ch_num, ch_name, el_count, ev_ring, max_ul_ch, max_dl_ch) \
+	{						\
+		.num = ch_num,				\
+		.name = ch_name,			\
+		.num_elements = el_count,		\
+		.event_ring = ev_ring,			\
+		.dir = DMA_TO_DEVICE,			\
+		.ee_mask = BIT(MHI_EE_AMSS),		\
+		.pollcfg = 0,				\
+		.doorbell = MHI_DB_BRST_ENABLE,	\
+		.lpm_notify = false,			\
+		.offload_channel = false,		\
+		.doorbell_mode_switch = true,		\
+		.queue = true,				\
+		.max_ul_chan = max_ul_ch,		\
+		.max_dl_chan = max_dl_ch,		\
+	}						\
+
+#define MHI_CHANNEL_CONFIG_HW_QUE_DL(ch_num, ch_name, el_count, ev_ring, max_ul_ch, max_dl_ch) \
+	{						\
+		.num = ch_num,				\
+		.name = ch_name,			\
+		.num_elements = el_count,		\
+		.event_ring = ev_ring,			\
+		.dir = DMA_FROM_DEVICE,			\
+		.ee_mask = BIT(MHI_EE_AMSS),		\
+		.pollcfg = 0,				\
+		.doorbell = MHI_DB_BRST_ENABLE,	\
+		.lpm_notify = false,			\
+		.offload_channel = false,		\
+		.doorbell_mode_switch = true,		\
+		.queue = true,				\
+		.max_ul_chan = max_ul_ch,		\
+		.max_dl_chan = max_dl_ch,		\
+	}
+
 #define MHI_CHANNEL_CONFIG_UL(ch_num, ch_name, el_count, ev_ring) \
 	{						\
 		.num = ch_num,				\
@@ -253,6 +289,20 @@ struct mhi_pci_dev_info {
 		.channel = ch_num,		\
 	}
 
+#define MHI_EVENT_CONFIG_HW_DATA_BRST(ev_ring, el_count, ch_num) \
+	{					\
+		.num_elements = el_count,	\
+		.irq_moderation_ms = 1,		\
+		.irq = (ev_ring) + 1,		\
+		.priority = 1,			\
+		.mode = MHI_DB_BRST_ENABLE,	\
+		.data_type = MHI_ER_DATA,	\
+		.hardware_event = true,		\
+		.client_managed = false,	\
+		.offload_channel = false,	\
+		.channel = ch_num,		\
+	}
+
 static const struct mhi_channel_config modem_qcom_v1_mhi_channels[] = {
 	MHI_CHANNEL_CONFIG_UL(4, "DIAG", 16, 1),
 	MHI_CHANNEL_CONFIG_DL(5, "DIAG", 16, 1),
@@ -543,15 +593,19 @@ static const struct mhi_channel_config mhi_telit_fn990_channels[] = {
 	MHI_CHANNEL_CONFIG_DL(93, "DUN2", 32, 1),
 	MHI_CHANNEL_CONFIG_UL(94, "NMEA", 8, 1),
 	MHI_CHANNEL_CONFIG_DL(95, "NMEA", 8, 1),
-	MHI_CHANNEL_CONFIG_HW_UL(100, "IP_HW0", 128, 2),
-	MHI_CHANNEL_CONFIG_HW_DL(101, "IP_HW0", 128, 3),
+	MHI_CHANNEL_CONFIG_HW_QUE_UL(100, "IP_HW0", 512, 2, 2, 2),
+	MHI_CHANNEL_CONFIG_HW_QUE_DL(101, "IP_HW0", 512, 3, 2, 2),
+	MHI_CHANNEL_CONFIG_HW_QUE_UL(107,"IP_HW0", 512, 4, 2, 2),
+	MHI_CHANNEL_CONFIG_HW_QUE_DL(108,"IP_HW0", 512, 5, 2, 2),
 };
 
 static struct mhi_event_config mhi_telit_fn990_events[] = {
 	MHI_EVENT_CONFIG_CTRL(0, 128),
 	MHI_EVENT_CONFIG_DATA(1, 128),
-	MHI_EVENT_CONFIG_HW_DATA(2, 1024, 100),
-	MHI_EVENT_CONFIG_HW_DATA(3, 2048, 101)
+	MHI_EVENT_CONFIG_HW_DATA_BRST(2, 1024, 100),
+	MHI_EVENT_CONFIG_HW_DATA_BRST(3, 1024, 101),
+	MHI_EVENT_CONFIG_HW_DATA_BRST(4, 1024, 107),
+	MHI_EVENT_CONFIG_HW_DATA_BRST(5, 1024, 108),
 };
 
 static const struct mhi_controller_config modem_telit_fn990_config = {
-- 
2.45.2

